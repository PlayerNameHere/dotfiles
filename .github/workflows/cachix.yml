name: Cachix

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      deploy: # When enabled, only the NixOS configuration is built (if needed)
        description: "Deploy the NixOS configuration"
        required: true
        type: boolean
        default: false

run-name: ${{ inputs.deploy && 'Deploy NixOS configuration' || 'Build flake outputs' }}

# Builds and deployments are in separate concurrency groups.
# Builds can cancel other in-progress builds on the same ref.
# Deployments will not cancel other in-progress deployments (but will cancel existing pending deployments),
# no matter what ref.
concurrency:
  group: ${{ github.workflow }}-${{ inputs.deploy && 'deploy' || 'build' }}${{ inputs.deploy && '' || format('-{0}', github.ref) }}
  cancel-in-progress: ${{ !inputs.deploy }}

env:
  artifact-name: deploy-spec-${{ github.sha }}

jobs:
  check-deploy-spec-artifact:
    runs-on: ubuntu-22.04
    outputs:
      # Unfortunately, all outputs are Unicode strings, so `fromJSON` must be used
      # whenever referencing this output to properly convert it to a boolean
      # https://github.com/actions/runner/issues/2238#issuecomment-1318973310
      # https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
      exists: ${{ steps.download-spec.outputs.found_artifact }}
    steps:
      - id: download-spec
        uses: dawidd6/action-download-artifact@v2
        with:
          name: ${{ env.artifact-name }}
          workflow_conclusion: ""
          commit: ${{ github.sha }}
          search_artifacts: true
          if_no_artifact_found: ignore
  check-flake:
    runs-on: ubuntu-22.04
    needs: check-deploy-spec-artifact
    if: ${{ !fromJSON(needs.check-deploy-spec-artifact.outputs.exists) }}
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: cachix/install-nix-action@v20
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check flake
        run: nix flake check --keep-going --impure # devenv requires impure
  build-nixos:
    runs-on: ubuntu-22.04
    needs: [check-deploy-spec-artifact, check-flake]
    if: ${{ !fromJSON(needs.check-deploy-spec-artifact.outputs.exists) }}
    steps:
      - name: Free up space
        run: |
          # Taken from https://github.com/easimon/maximize-build-space/blob/67afc2d7662c9d296547435e7605cc57a1df46f3/action.yml#L110
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
      - uses: actions/checkout@v3
      - name: Build deploy specification
        uses: ./.github/actions/build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cachix-auth-token: ${{ secrets.CACHIX_AUTH_TOKEN }}
          derivation: ".#cachix-deploy-spec"
          cachix-extra-pull-names: "nix-gaming, hyprland, nix-community"
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact-name }}
          path: ./result
  deploy:
    runs-on: ubuntu-22.04
    needs: build-nixos
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.deploy }}
    steps:
      - uses: dawidd6/action-download-artifact@v2
        with:
          name: ${{ env.artifact-name }}
          workflow_conclusion: ""
          commit: ${{ github.sha }}
          search_artifacts: true
      - uses: cachix/install-nix-action@v20
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v12
        with:
          name: playernamehere-nixos
          skipPush: true
      - name: Deploy
        env:
          CACHIX_ACTIVATE_TOKEN: "${{ secrets.CACHIX_ACTIVATE_TOKEN }}"
        run: |
          cachix deploy activate ./result
