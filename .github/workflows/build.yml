name: Build flake outputs and push to Cachix

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-flake:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Check
        run: nix flake check --keep-going
  build-others:
    runs-on: ubuntu-22.04
    needs: check-flake
    strategy:
      fail-fast: false
      matrix:
        build:
          - flake-output: "devShells.x86_64-linux.default"
            cachix-extra-pull-names: "devenv"
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build  # from the checked out repo
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cachix-auth-token: ${{ secrets.CACHIX_AUTH_TOKEN }}
          flake-output: ${{ matrix.build.flake-output }}
          cachix-extra-pull-names: ${{ matrix.build.cachix-extra-pull-names }}
  build-nixos:
    runs-on: ubuntu-22.04
    needs: check-flake
    env:
      artifact-name: deploy-spec-${{ github.sha }}
    steps:
      - id: download-spec
        uses: dawidd6/action-download-artifact@v2
        with:
          name: ${{ env.artifact-name }}
          commit: ${{ github.sha }}
          search_artifacts: true
          if_no_artifact_found: ignore
      - if: ${{ !fromJson(steps.download-spec.outputs.found_artifact) }}  # https://github.com/actions/runner/issues/2238
        uses: actions/checkout@v3
      - if: ${{ !fromJson(steps.download-spec.outputs.found_artifact) }}
        uses: ./.github/actions/build
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cachix-auth-token: ${{ secrets.CACHIX_AUTH_TOKEN }}
          flake-output: "cachix-deploy-spec"
          cachix-extra-pull-names: "nix-gaming, hyprland, nix-community"
          upload-artifact: true
          artifact-name: ${{ env.artifact-name }}
